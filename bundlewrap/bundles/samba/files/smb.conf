[global]
    workgroup = ${node.metadata.get('samba', {}).get('workgroup', 'Fileserver')}
    server string = %h server (Samba, Ubuntu)
    dns proxy = no
% if 'allowed_hosts' in node.metadata.get('samba', {}):
    hosts allow = ${node.metadata['samba']['allowed_hosts']}
% endif
    log file = /var/log/samba/log.%m
    max log size = 1000
    syslog = 0
    panic action = /usr/share/samba/panic-action %d
    encrypt passwords = true
    passdb backend = tdbsam
    obey pam restrictions = ${'yes' if node.metadata.get('samba', {}).get('obey_pam_restrictions', True) else 'no'}
% if node.metadata.get('samba', {}).get('unix_password_sync', False):
    unix password sync = yes
    passwd program = /usr/bin/passwd %u
    passwd chat = *Enter\snew\s*\spassword:* %n\n *Retype\snew\s*\spassword:* %n\n *password\supdated\ssuccessfully* .
    pam password change = yes
% endif
    map to guest = bad user
    load printers = no
    usershare allow guests = yes
% for option in sorted(node.metadata.get('samba', {}).get('additional_options', [])):
    ${option}
% endfor

% for name, opts in sorted(node.metadata.get('samba', {}).get('shares', {}).items()):
[${name}]
browseable = yes
comment = ${opts['comment']}
writable = ${'yes' if opts.get('writable', True) else 'no'}
printable = no
public = no
path = ${opts['path']}
    % if 'guest_ok' in opts:
guest ok = ${opts['guest_ok']}
    % endif
    % if 'force_user' in opts:
force user = ${opts['force_user']}
    % endif
    % if 'force_group' in opts:
force group = ${opts['force_group']}
    % endif
    % if 'additional_options' in opts:
        % for option in sorted(opts['additional_options']):
${option}
        % endfor
    % endif
    % if 'enforce_file_mode' in opts:
create mask = ${opts['enforce_file_mode']}
force create mode = ${opts['enforce_file_mode']}
    % endif
    % if 'enforce_directory_mode' in opts:
directory mask = ${opts['enforce_directory_mode']}
force directory mode = ${opts['enforce_directory_mode']}
    % endif
% endfor
