error_log  /var/log/nginx/rtmp-error.log;
pid /var/run/nginx-rtmp.pid;

# HLS-Master configuration
include /usr/share/nginx/modules-available/mod-rtmp.conf;

events {
  worker_connections  4096;
}

user  www-data;

# Specifies the value for maximum file descriptors that can be opened by this process.
worker_rlimit_nofile 65536;

# multiple worker
worker_processes  1;

# important for multi worker processes!!1!
rtmp_auto_push off;

rtmp {
  log_format rtmp '"$remote_addr [$time_local] $command "$app" "$name" "$args" - $bytes_received $bytes_sent ($session_readable_time)"';
  access_log /var/log/nginx/rtmp_access.log rtmp;

  server {
{% if nginx_bind_ipv4 is defined and nginx_bind_ipv6 is defined %}
    listen [{{ nginx_bind_ipv6 }}]:1935 ipv6only=off;
    listen {{ nginx_bind_ipv4 }}:1935 ipv6only=off;
{% else %}
    listen [::]:1935 ipv6only=off;
{% endif %}

    ping 30s;

    # Disable audio until first video frame is sent.
    wait_video on;
    # Send NetStream.Publish.Start and NetStream.Publish.Stop to subscribers.
    publish_notify on;

    # Synchronize audio and video streams. If subscriber bandwidth is not
    # enough to receive data at publisher rate some frames are dropped by
    # the server. This leads to synchronization problem. When timestamp
    # difference exceeds the value specified as sync argument an absolute
    # frame is sent fixing that. Default is 300ms.
    sync 10ms;

    # stream with forward to icecast
    application stream {
      # enable live streaming
      live on;

      # copy breaks relaying, on pollutes downstream
      meta off;

      allow publish all;
      allow play all;

      {% if rtmp_auth|bool -%}
      # authenticate stream publish against backend
      on_publish http://127.0.0.1:8080/publish;
      on_publish_done http://127.0.0.1:8080/unpublish;
      {% endif %}

      # forward streams to local icecast
      exec ffmpeg -v warning -nostats -nostdin -y -analyzeduration 1000000
        -f live_flv -i rtmp://127.0.0.1/$app/$name
        -c copy -map 0:v:0 -map 0:a:0
        -f matroska -content_type video/webm -password {{ icecast_source_password }}
        icecast://127.0.0.1:8000/${name};
    }

    # relay only
    application relay {
      live on;
      meta off;

      allow publish all;
      allow play all;

      {% if rtmp_auth|bool and rtmp_auth_relay|bool -%}
      # authenticate stream publish against backend
      on_publish http://127.0.0.1:8080/publish;
      on_publish_done http://127.0.0.1:8080/unpublish;
      {% endif %}
    }
  }
}


http {
  server_tokens off;
  sendfile on;

  types_hash_max_size 2048;

  log_format ip '$remote_addr - $remote_user [$time_local] "$request" $status $body_bytes_sent "$http_referer" "$http_user_agent"';
  access_log off;

  # mime-types
  default_type application/octet-stream;

  types {
    application/dash+xml mpd;
  }

  # gzip settings
  gzip off;

  # disable directory listing
  autoindex off;

  # vhost for stats
  server {
    server_name _;

    listen 127.0.0.1:9999;
    allow ::1;
    allow 127.0.0.1;

    # stats
    location ~* ^/stats/nginx {
      stub_status on;
    }

    location ~* ^/stats/rtmp {
      rtmp_stat all;
      rtmp_stat_stylesheet /stat.xsl;
    }

    location /control {
      rtmp_control all;
    }
  }
}
